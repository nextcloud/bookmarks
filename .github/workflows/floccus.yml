name: Floccus

on:
  pull_request:
  push:
    branches:
      - master
      - develop

env:
  APP_NAME: bookmarks

jobs:
  php:
    runs-on: ubuntu-latest

    env:
      SELENIUM_HUB_HOST: hub
      TEST_HOST: nextcloud
      SERVER_BRANCH: ${{ matrix.server-versions }}
      SELENIUM_VERSION: 3.141.59-20200409
      MYSQL_PASSWORD: root

    strategy:
      # do not stop on another job's failure
      fail-fast: false
      matrix:
        node-versions: [13.x]
        server-versions: ['18']
        floccus-adapter:
          - nextcloud-folders
        test-name:
          - standard
          - parallel
          - benchmark standard-root
          - benchmark parallel-root
        browsers: ['chrome']
        include:
          - server-versions: 18
            floccus-adapter: nextcloud-folders
            test-name: benchmark standard-root
            browsers: chrome
          - server-versions: 18
            floccus-adapter: nextcloud-folders
            test-name: benchmark parallel-root
            browsers: chrome


    name: ${{matrix.floccus-adapter}}:${{ matrix.test-name}}

    services:
      hub:
        image: selenium/hub:3.141.59-20200409
        ports:
          - 4444:4444
      chrome:
        image: selenium/node-chrome:3.141.59-20200409
        env:
          HUB_HOST: hub
          HUB_PORT: 4444
        options: -v /dev/shm:/dev/shm
      nextcloud:
        image: nextcloud:${{ matrix.server-versions }}
        env:
          NEXTCLOUD_ADMIN_USER: admin
          NEXTCLOUD_ADMIN_PASSWORD: admin
          MYSQL_DATABASE: nextcloud
          MYSQL_USER: root
          MYSQL_PASSWORD: ${{env.MYSQL_PASSWORD}}
          MYSQL_HOST: mysql
          NEXTCLOUD_TRUSTED_DOMAINS: nextcloud
        volumes:
          - apps:/home/runner/work/floccus/floccus/apps
        options: --name nextcloud
      mysql:
        image: mariadb:latest
        env:
          MYSQL_ROOT_PASSWORD: ${{env.MYSQL_PASSWORD}}

    steps:
      - name: Checkout floccus
        uses: actions/checkout@v2
        with:
          repository: marcelklehr/floccus
          ref: master
          path: floccus

      - name: Checkout bookmarks app
        uses: actions/checkout@v2
        with:
          path: apps/${{ env.APP_NAME }}
        if: matrix.floccus-adapter == 'nextcloud-folders'

      - name: Enable bookmarks app
        shell: bash
        run: |
          NEXT_WAIT_TIME=0
          until [ $NEXT_WAIT_TIME -eq 25 ] || docker exec --user www-data nextcloud php occ app:enable ${{ env.APP_NAME }}; do
              sleep $(( NEXT_WAIT_TIME++ ))
          done
          [ $NEXT_WAIT_TIME -lt 25 ]
        if: matrix.floccus-adapter != 'fake'

      - name: Enable APCu
        run: |
          docker exec --user www-data nextcloud php occ config:system:set --value "\\OC\\Memcache\\APCu" memcache.local
        if: matrix.floccus-adapter != 'fake'

      - name: Set up node ${{ matrix.node-versions }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-versions }}

      - name: Cache node modules
        uses: actions/cache@v1
        env:
          cache-name: cache-node-modules
        with:
          path: ~/.npm # npm cache files are stored in `~/.npm` on Linux/macOS
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-

      - name: Install dependencies & build
        working-directory: floccus
        run: |
          npm ci
          npm run build-release --if-present

      - name: Run tests
        working-directory: floccus
        env:
          SELENIUM_BROWSER: ${{ matrix.browsers }}
          FLOCCUS_TEST: ${{matrix.floccus-adapter}} ${{ matrix.test-name}}
          GIST_TOKEN: "foo"
        run: |
          npm run test
